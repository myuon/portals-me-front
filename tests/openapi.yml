openapi: "3.0.0"
info:
  version: 1.0.0
  title: Portals me API
  license:
    name: MIT
servers:
  - url: http://localhost:5000/
paths:
  /users/me:
    get:
      summary: Get my account data
      tags:
        - user
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /projects:
    get:
      summary: List all projects
      tags:
        - project
      responses:
        '200':
          description: A pages array of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /projects/{projectId}:
    get:
      summary: Get a project
      tags:
        - project
      parameters:
        - name: projectId
          in: path
          description: project id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /projects/{projectId}/collections:
    get:
      summary: List collections with specified projectId
      tags:
        - project
      parameters:
        - name: projectId
          in: path
          description: project id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An array of collections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'

  /projects/{projectId}/comments:
    get:
      summary: List all comments in collections in a project
      tags:
        - project
      parameters:
        - name: projectId
          in: path
          description: project id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An array of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /collections/{collectionId}/comments:
    get:
      summary: List comments in a collection
      tags:
        - collection
      parameters:
        - name: collectionId
          in: path
          description: collection id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An array of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        user_name:
          type: string

    Project:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        media:
          type: array
          items:
            type: string
            enum:
              - document
              - picture
              - movie
        cover:
          type: object
          properties:
            sort:
              type: string
              enum:
                - solid
            color:
              type: string
        collections:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            type: string

    Collection:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        items:
          $ref: '#/components/schemas/Item'

    Item:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        entity:
          type: object
          properties:
            source:
              type: string
              enum:
                - ogp
            ogp:
              type: object
              properties:
                image:
                  type: string
                title:
                  type: string
                description:
                  type: string
                url:
                  type: string

    Comment:
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: datetime
        message:
          type: string
